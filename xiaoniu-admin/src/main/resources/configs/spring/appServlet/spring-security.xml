<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns="http://www.springframework.org/schema/security"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<!-- 打开@PreFilter,@PreAuthorize, @PostFilter, @PostAuthorize等注解支持（注意：放在这里只会对Service层的方法生效） -->
	<global-method-security pre-post-annotations="enabled" />
	
	
	<http pattern="/resources/js/**" security="none"></http>
	<http pattern="/resources/css/**" security="none"></http>
	<http pattern="/resources/images/**" security="none"></http>
	<http pattern="/resources/upload/**" security="none"></http>
	<http pattern="/resources/css/*" security="none"></http>
	<http pattern="/static/**" security="none"></http>
	<http pattern="/favicon.ico" security="none"></http>
	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<logout logout-success-url="/secure/index.html" logout-url="/logout.html"/>
		<access-denied-handler error-page="/public/error/403.html"/>
	    <intercept-url pattern="/" access="permitAll" />
	    <intercept-url pattern="/public/**" access="permitAll" />
	    <intercept-url pattern="/secure/**" access="fullyAuthenticated" />
	    <intercept-url pattern="/resources/ueditor/**" access="fullyAuthenticated" />
	    <intercept-url pattern="/**" access="denyAll" />
	    <custom-filter ref="validateCodeUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
	</http>
	
	<!-- 整合登陆验证码的认证 -->
	<beans:bean id="validateCodeUsernamePasswordAuthenticationFilter" class="cn.hrx.common.security.ValidateCodeUsernamePasswordAuthenticationFilter">
		<!-- 处理登录的action  -->
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <!-- 验证成功后的处理   -->
        <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"/>
        <!-- 验证失败后的处理 -->
        <beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
	</beans:bean>
	
	<!-- 登录成功 -->
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/public/loginSuccess"/>
	</beans:bean>
	
	<!-- 登录失败 -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/public/loginFailed"/>
	</beans:bean>
	
	<!-- 登录入口点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/public/sys.html"/>
	</beans:bean>
	
	<beans:bean id="zxxzxjEncoder" class="com.xiaoniu.common.security.ZxxzxjDESPasswordEncoder"/>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="adminUserDetailsService">
			<password-encoder ref="zxxzxjEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>